[{"C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\index.tsx":"1","C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\reportWebVitals.ts":"2","C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\Utils\\MainReducer\\mainReducer.ts":"3","C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\App\\Component\\App.tsx":"4","C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\IManage\\Component\\iManage.tsx":"5","C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\IManage\\Component\\category.tsx":"6","C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\IManage\\State\\state.ts":"7","C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\IManage\\Utils\\utils.ts":"8","C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\Utils\\HTTP\\axiosUtils.ts":"9"},{"size":963,"mtime":1607940887080,"results":"10","hashOfConfig":"11"},{"size":440,"mtime":1607909992892,"results":"12","hashOfConfig":"11"},{"size":135,"mtime":1607940869517,"results":"13","hashOfConfig":"11"},{"size":200,"mtime":1608037388481,"results":"14","hashOfConfig":"11"},{"size":2581,"mtime":1608039631392,"results":"15","hashOfConfig":"11"},{"size":1629,"mtime":1608039730240,"results":"16","hashOfConfig":"11"},{"size":917,"mtime":1608022790067,"results":"17","hashOfConfig":"11"},{"size":1599,"mtime":1608036151884,"results":"18","hashOfConfig":"11"},{"size":1916,"mtime":1608038210092,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1y9k192",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\index.tsx",[],["41","42"],"C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\reportWebVitals.ts",[],"C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\Utils\\MainReducer\\mainReducer.ts",[],"C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\App\\Component\\App.tsx",[],"C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\IManage\\Component\\iManage.tsx",["43"],"import React, { useEffect, useState } from 'react';\r\nimport Category from './category';\r\nimport Ajv from \"ajv\"\r\nimport IManageUtils from '../Utils/utils';\r\nimport AxiosGateWay from '../../Utils/HTTP/axiosUtils';\r\n\r\ninterface Props {\r\n    isStart: boolean;\r\n}\r\n\r\nexport default function IManage(props: Props) {\r\n    let { isStart } = props;\r\n    let [schema, setSchema] = useState(IManageUtils.majorCategorySchema(''));\r\n    let [formData, setFormData] = useState({ value: '', food: '', quantity: 0 })\r\n    let [message, setMessage] = useState('');\r\n    useEffect(() => {\r\n        getPrevData();\r\n    }, [isStart])\r\n\r\n    function validateAndSetCategory(category: any) {\r\n        debugger;\r\n        let a = { ...formData }\r\n        let ajv = new Ajv();\r\n        let validator = ajv.compile(IManageUtils.majorCategorySchema(category.value));\r\n        if (category.value && validator(category)) {\r\n            a.value = category.value;\r\n            setFormData(a);\r\n            setSchema(IManageUtils.majorCategorySchema(category.value));\r\n        }\r\n        if (category.food && validator(category)) {\r\n            a.food = category.food;\r\n            setFormData(a);\r\n        }\r\n        if (category.quantity && validator(category)) {\r\n            a.quantity = category.quantity;\r\n            setFormData(a);\r\n        }\r\n        setMessage('');\r\n    }\r\n    function getPrevData() {\r\n        let url = 'http://localhost:5000/im';\r\n        let config = { responseType: 'blob' };\r\n\r\n        AxiosGateWay.GET(url).then(\r\n            result => {\r\n                let parsed = result.data;\r\n                setFormData(parsed);\r\n            }\r\n        )\r\n    }\r\n    function submit() {\r\n        // api call here\r\n        let url = 'http://localhost:5000/im';\r\n        AxiosGateWay.POST(url, { data: formData }).then(\r\n            result => {\r\n                setMessage('Saved succesfully');\r\n            }\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"offset-md-4 col-md-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <Category submit={submit} formData={formData} schema={schema} setCategory={validateAndSetCategory} />\r\n                    </div>\r\n                </div>\r\n                {message.length > 0 &&\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            {message}\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\IManage\\Component\\category.tsx",[],"C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\IManage\\State\\state.ts",[],"C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\IManage\\Utils\\utils.ts",["44"],"import { MajorCategory } from \"../State/state\";\r\n\r\nexport default class IManageUtils {\r\n    public static majorCategorySchema(category: string) {\r\n        let options: any = {\r\n                    \"Lentils\": ['Masoor Dal', 'Toor/Arhar Dal', 'Lobia', 'Chickpea'],\r\n                    \"Rice\": ['Basmati Rice', 'Brown Rice', 'Jasmine Rice'],\r\n                    \"Milk\": ['Silm Milk', 'Cow Milk'],\r\n                    \"Vegetables\": ['Tomato', 'Potato', 'Peas']\r\n                }\r\n        const schema: any = {\r\n            \"title\": \"I manage form\",\r\n            \"description\":\"\",\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"category\": {\r\n                    \"type\": \"string\",\r\n                    \"title\": \"category\",\r\n                    \"enum\": [{label: \"Food\", value: [\"Lentils\", \"Rice\", \"Milk\", \"Vegetables\"]},\r\n                    {label: \"Utencils\", value: [\"Tea Sets\", \"Spoons\", \"Plates\"]},\r\n                    {label: \"Toys\", value: [\"Electric toys\", \"Board games\", \"Card games\"]}]\r\n                }\r\n            }\r\n        }\r\n        if (category === 'Lentils' || category === 'Rice' || category === 'Milk' || category === 'Vegetables') {\r\n            schema.properties['food'] = {\r\n                \"type\": \"string\",\r\n                \"title\": \"Selected Food\",\r\n                \"enum\": options[category]\r\n            }\r\n        }\r\n        if (category !== '') {\r\n            schema.properties['quantity'] = {\r\n                \"type\": \"number\",\r\n                \"title\": \"quantity(kg / pc)\"\r\n            }\r\n        }\r\n        return schema;\r\n    }\r\n    \r\n}","C:\\Users\\Ashish Kirodian\\OneDrive\\Desktop\\sides\\fish-model\\src\\Utils\\HTTP\\axiosUtils.ts",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":42,"column":13,"nodeType":"51","messageId":"52","endLine":42,"endColumn":19},{"ruleId":"49","severity":1,"message":"53","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":23},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'config' is assigned a value but never used.","Identifier","unusedVar","'MajorCategory' is defined but never used.","no-global-assign","no-unsafe-negation"]